!function(e){function __webpack_require__(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,__webpack_require__),r.l=!0,r.exports}var o={};__webpack_require__.m=e,__webpack_require__.c=o,__webpack_require__.i=function(e){return e},__webpack_require__.d=function(e,o,t){__webpack_require__.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:t})},__webpack_require__.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(o,"a",o),o},__webpack_require__.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=7)}([function(e,o){e.exports=riot},function(e,o,t){"use strict";function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(o,"__esModule",{value:!0});var r=function(){function RouteContributionStore(){_classCallCheck(this,RouteContributionStore);var e=this;e.name="RouteContributionStore",riot.observable(e),e._initializeViewSet(),e.bindEvents()}return RouteContributionStore.prototype._initializeViewSet=function(){var e=this;e._viewsSet=new Set;var o=e._viewsSet;o.add("home"),o.add("my-component-page"),o.add("typicode-user-detail"),e.views=Array.from(o),e.defaultRoute="/my-component-page/home"},RouteContributionStore.prototype.bindEvents=function(){var e=this;e.on(riot.EVT.router.out.contributeRoutes,function(o){console.log(e.name,riot.EVT.router.out.contributeRoutes,o),o("/my-component-page/typicode-user-detail?id=*",function(){console.log("route handler of /my-component-page/typicode-user-detail"),riot.control.trigger(riot.EVT.loadView,"mpc-typicode-user-detail")}),o("/my-component-page/*",function(o){console.log("route handler of /my-component-page/"+o);var t=o;-1===e.views.indexOf(t)?riot.control.trigger(riot.EVT.routeStore.in.routeDispatch,e.defaultRoute):riot.control.trigger(riot.EVT.loadView,"mpc-"+t)}),o("/my-component-page..",function(){console.log("route handler of /my-component-page.."),riot.control.trigger(riot.EVT.routeStore.in.routeDispatch,e.defaultRoute)})})},RouteContributionStore}();o.default=r},function(e,o,t){"use strict";function TypicodeUserStore(){var e=this;e.name="TypicodeUserStore",riot.EVT.typicodeUserStore={in:{typicodeInit:"typicode-init",typicodeUninit:"typicode-uninit",typicodeUsersFetchResult:"typicode-users-fetch-result",typicodeUsersFetch:"typicode-users-fetch",typicodeUserFetch:"typicode-user-fetch"},out:{typicodeUsersChanged:"typicode-users-changed",typicodeUserChanged:"typicode-user-changed"}},riot.observable(e),e.fetchException=null,e.on(riot.EVT.app.out.appMount,function(){console.log(riot.EVT.app.out.appMount,e.name),riot.control.on(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,e.onUsersResult)}),e.on(riot.EVT.app.out.appUnmount,function(){console.log(riot.EVT.app.out.appUnmount,e.name),riot.control.off(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,e.onUsersResult)}),e.on(riot.EVT.typicodeUserStore.in.typicodeInit,function(){console.log(riot.EVT.typicodeUserStore.in.typicodeInit,e.name),riot.control.on(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,e.onUsersResult)}),e.on(riot.EVT.typicodeUserStore.in.typicodeUninit,function(){console.log(riot.EVT.typicodeUserStore.in.typicodeUninit,e.name),riot.control.off(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,e.onUsersResult)}),e.resetData=function(){e.fetchException=null},e.onUsersResult=function(o,t){if(console.log(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,o,t),null==o.error&&o.response.ok&&o.json){var i=o.json;if(riot.control.trigger(riot.EVT.localStorageStore.in.localstorageSet,{key:r,data:i}),e.trigger(riot.EVT.typicodeUserStore.out.typicodeUsersChanged,i),t.query){var s=t.query;"riotControlTrigger"==s.type&&riot.control.trigger(s.evt,s.query)}}else riot.control.trigger(riot.EVT.localStorageStore.in.localstorageRemove,{key:r}),riot.control.trigger("ErrorStore:error-catch-all",{code:"typeicode-143523"})},e.on(riot.EVT.typicodeUserStore.in.typicodeUsersFetch,function(e){console.log(riot.EVT.typicodeUserStore.in.typicodeUsersFetch);var o={name:riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult};e&&(o.query=e),riot.control.trigger(riot.EVT.fetchStore.in.fetch,"https://jsonplaceholder.typicode.com/users",null,o)}),e.on(riot.EVT.typicodeUserStore.in.typicodeUserFetch,function(o){console.log(riot.EVT.typicodeUserStore.in.typicodeUserFetch);var t=JSON.parse(localStorage.getItem(r));if(t){var i=t.filter(function(e){return e.id==o.id});i&&i.length>0&&e.trigger(riot.EVT.typicodeUserStore.out.typicodeUserChanged,i[0])}else{var s={type:"riotControlTrigger",evt:riot.EVT.typicodeUserStore.in.typicodeUserFetch,query:o};riot.control.trigger(riot.EVT.typicodeUserStore.in.typicodeUsersFetch,s)}})}var r="typicodeUserCache";e.exports=TypicodeUserStore},function(e,o,t){"use strict";t(0).tag2("mpc-home",'<div class="panel panel-default"> <div class="panel-heading">My Component</div> <div class="panel-body"> <div class="well"> I am located in a prebuilt bundle.js. I am a full blown SPA as far as I am concerned, as I just had to follow a few rules that the hosting SPA required. </div> </div> </div> <a href="#my-component-page/my-component-page" class="btn btn-default">TypiCode Users</a>',"","",function(e){})},function(e,o,t){"use strict";var r=t(0);r.tag2("mpc-my-component-page",'<div class="panel panel-default"> <div class="panel-heading">TypiCode Users</div> <div class="panel-body"> <div class="well"> This pulls users from https://jsonplaceholder.typicode.com/ </div> <table class="table table-striped table-hover "> <thead> <tr> <th>id</th> <th>username</th> <th>name</th> <th>email</th> <th>phone</th> <th>details</th> </tr> </thead> <tbody> <tr each="{this.results}"> <td>{this.id}</td> <td>{this.username}</td> <td>{this.name}</td> <td>{this.email}</td> <td>{this.phone}</td> <td><a onclick="{parent.route}">More...</a></td> </tr> </tbody> </table> </div> </div>',"","",function(e){var o=this;o.error=!1,o.results=[],o.resetData=function(){o.results=[],o.error=!1},o.on("mount",function(){console.log("typicode-users mount"),r.control.on(r.EVT.typicodeUserStore.out.typicodeUsersChanged,o.onTypicodeUsersChanged),r.control.trigger(r.EVT.typicodeUserStore.in.typicodeUsersFetch)}),o.on("unmount",function(){console.log("typicode-users unmount"),r.control.off(r.EVT.typicodeUserStore.out.typicodeUsersChanged,o.onTypicodeUsersChanged)}),o.onTypicodeUsersChanged=function(e){console.log(r.EVT.typicodeUserStore.out.typicodeUsersChanged),o.results=e,console.log(o.results),o.update()},o.route=function(e){r.control.trigger("riot-route-dispatch","my-component-page/typicode-user-detail?id="+e.item.id)}})},function(e,o,t){"use strict";var r=t(0);r.tag2("mpc-typicode-user-detail",'<div if="{result != null}" class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">{result.name}</h3> </div> <div class="panel-body"> <form class="form-horizontal"> <fieldset> <legend>User Details</legend> <div class="form-group"> <label class="col-sm-2 control-label">Name</label> <div class="col-sm-10"> <p class="form-control-static">{result.name}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Email</label> <div class="col-sm-10"> <p class="form-control-static">{result.email}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Phone</label> <div class="col-sm-10"> <p class="form-control-static">{result.phone}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">User Name</label> <div class="col-sm-10"> <p class="form-control-static">{result.username}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Web Site</label> <div class="col-sm-10"> <p class="form-control-static">{result.website}</p> </div> </div> </fieldset> </form> <form class="form-horizontal"> <fieldset> <legend>Address</legend> <div class="form-group"> <label class="col-sm-2 control-label">Suite</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.suite}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Street</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.street}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">City</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.city}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Zip Code</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.zipcode}</p> </div> </div> </fieldset> </form> <form class="form-horizontal"> <fieldset> <legend>Company</legend> <div class="form-group"> <label class="col-sm-2 control-label">Name</label> <div class="col-sm-10"> <p class="form-control-static">{result.company.name}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Catch Phrase</label> <div class="col-sm-10"> <p class="form-control-static">{result.company.catchPhrase}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Business Statement</label> <div class="col-sm-10"> <p class="form-control-static">{result.company.bs}</p> </div> </div> </fieldset> </form> </div> </div>',"","",function(e){var o=this;o.result=null,o.onUserChanged=function(e){o.result=e,console.log(o.result),o.update()},o.on("mount",function(){var e=r.route.query();console.log("on mount: typicode-user-detail",e),r.control.on(r.EVT.typicodeUserStore.out.typicodeUserChanged,o.onUserChanged),r.control.trigger(r.EVT.typicodeUserStore.in.typicodeUserFetch,{id:e.id})}),o.on("unmount",function(){console.log("on unmount:"),r.control.off(r.EVT.typicodeUserStore.out.typicodeUserChanged,o.onUserChanged)})})},function(e,o){},function(e,o,t){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t(6);var r=t(2),i=_interopRequireDefault(r),s=t(1),n=_interopRequireDefault(s);t(4),t(5),t(3);var l={name:"typicode-component",stores:[{store:new i.default},{store:new n.default}],postLoadEvents:[{event:"typicode-init",data:{}}],preUnloadEvents:[{event:"typicode-uninit",data:{}}]};riot.control.trigger("plugin-registration",l),riot.control.trigger("component-load-complete",l.name)}]);